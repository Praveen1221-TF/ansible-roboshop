- name: connfigure shipping server  
  hosts: shipping
  become: yes
  tasks:
  - name: install maven
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
    - maven
    - mysql

  - name: create ansible roboshop user
    ansible.builtin.user:
      name: roboshop
      comment: robosgop user
      system: true
      shell: /sbin/nologin
      home: /app

  - name: create app directory
    ansible.builtin.file:
     state: directory
     path: /app

  - name: Delete shipping file
    ansible.builtin.file:
      path: /tmp/shipping.zip
      state: absent

  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/shipping.zip

  - name: unzipping catalogue
    ansible.builtin.unarchive:
      src: /tmp/shippng.zip
      dest: /app
      remote_src: yes 

  - name: install dependencies
    ansible.builtin.command: mvn clean package 
    args:
      chdir: /app

  - name: move jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service


  - name: import shipping data into mysql
    community.mysql.mysql_db:
      state: import
      name: all
      login_host: mmysql.practicedev.shop
      login_user: root
      login_password: RoboShop@1
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql 
    - /app/db/master-data.sql

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: user
      enabled: true
      state: started
      daemon_reload: true
